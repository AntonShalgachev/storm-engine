dword ReceiveAndBlur = 0;

dword dwShadowObjectID;
float fShadowObjectID;  // dwShadowObjectID / 255 
matrix mShadowView;
matrix mShadowProjection;
matrix mShadowAdjustment;
matrix mShadowWVP;
vector4 vShadowParam1;
vector4 vShadowParam2;  /* x = zbias, y = fade distanance */
texture tShadowLookUp;
texture tShadowMap;


#define GMX_VS_SHADOW_CAST(_POS)								\
  dp4 r0.x, _POS, c[GC_SHADOW_CONST1]						\
  dp4 r0.y, _POS, c[GC_SHADOW_CONST1+1]					\
  dp4 r0.z, _POS, c[GC_SHADOW_CONST1+2]					\
	mov r0.w, c[GC_CONSTANT].y										\
  mov oPos, r0																	\



#define GMX_VS_SHADOW_RECEIVE(_POS)             \ 
    m4x4 oPos, _POS, c[GC_MTX_WVP]              \    // —чиатем позицию на экране
    dp4 r2.x, _POS, c[GC_SHADOW_CONST2]         \    //—читаем UV на ShadowMap'e
    dp4 r2.y, _POS, c[GC_SHADOW_CONST2+1]       \    //—читаем UV на ShadowMap'e
		add r2.x, r2.x, c[GC_SHADOW_CONST1+3].y			\
		add r2.y, r2.y, c[GC_SHADOW_CONST1+3].z			\
    mov r2.zw, c[GC_CONSTANT].yy                \    // = 1
    mov oT3, r2                                 \

//    mov oT2, c[GC_SHADOW_CONST1+3]              \     

