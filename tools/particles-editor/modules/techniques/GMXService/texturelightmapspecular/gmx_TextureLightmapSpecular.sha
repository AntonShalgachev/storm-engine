vertexshader gmx_TextureLightmapSpecularVS() 
{
 STATIC_DECL

 asm
 {
  vs.1.1

  m4x4 r1, vPos, c[GC_MTX_WVP]    // Transform position
  mov oPos, r1 


  UNPACK_TEX(oT0, vPackedUV1)
  UNPACK_TEX(oT1, vPackedUV2)


  UNPACK_NORMAL(vUnpackedNormal, vPackedNormal)
  SET_REGISTER_XYZ_TO_ONE(oD0)
  SPECULAR_DIR_LIGHT_RES_OD0(oT2, vUnpackedNormal, r4, r5, r6)
  
  GMX_FOG(r1, r2);
 }
} 


block gmx_TextureLightmapSpecular ()
{
  Texture[0] = GMX_TextureStage0;
  Texture[1] = GMX_TextureStage1;
  Texture[2] = TextureGlobalLightSpecular;

  ColorOp[0] = SelectArg1;
  ColorArg1[0] = Texture;

  ColorOp[1] = Modulate2X;
  ColorArg1[1] = Current;
  ColorArg2[1] = Texture;
  
  ColorOp[2] = MultiplyAdd;                     
  ColorArg0[2] = current;                       
  ColorArg1[2] = Texture;                       
  ColorArg2[2] = diffuse_alphareplicate;        
  

  AlphaOp[0] = Modulate;                        
  AlphaArg1[0] = Texture;                       
  AlphaArg2[0] = TFactor;                       
                                              
  TextureFactor = GMX_ObjectsTransparency;      
  AlphaRef = 1;                                 
  
                
  AlphaBlendEnable = true;
  AlphaTestEnable = true;

  VertexShader = gmx_TextureLightmapSpecularVS();

  VertexShaderConstant[GMX_MWORLD] = mWorld;  

  Draw ();
}
