
Color PPL_Light_Color;
float PPL_Light_Size;
texture TextureGlobalLightSpecular;
Color PPL_AmbientColor;

vertexshader vsDiffuseLight() 
{
 decl
 {
   stream(0)
   {
    vector3         vPos;
    vector2         vUV;
   }
 }

 asm
 {
  vs.1.1

//  mov r0, vPos
  m4x4 oPos, vPos, c[GC_MTX_WVP]

  sub r0, vUV, c[GC_CONSTANT].zzzz
	mul r1, r0, c[GC_FREE]
  add r2, r1, c[GC_CONSTANT].zzzz
  mov oT0, r2 
 }
} 


block DrawDiffuseLight ()
{
  //ZEnable = false;
  FogEnable = false;

  SrcBlend = one;
  DestBlend = one;

  AddressU[0] = Clamp;
  AddressV[0] = Clamp;
  AddressW[0] = Clamp;


	TextureFactor = PPL_Light_Color;
  ColorOp[0] = Modulate;
  ColorArg1[0] = Texture;
  ColorArg2[0] = TFactor;

  AlphaOp[0] = SelectArg2;
  AlphaArg1[0] = Texture;
  AlphaArg2[0] = TFactor;
  
  AlphaBlendEnable = true;
  AlphaTestEnable = true;

//  AlphaBlendEnable = false;
//	AlphaTestEnable = false;
  
  AlphaRef = 1;

  CullMode = none;

	VertexShaderConstant[GC_FREE] = PPL_Light_Size;
  VertexShader = vsDiffuseLight();
  
//		fillmode = wireframe;
  
  
  Draw ();
}
